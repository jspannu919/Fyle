{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/jaideeppannu/Desktop/learning/fyle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jaideeppannu/Desktop/learning/fyle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./Table.css\";import{parseLabel}from\"./../../utils/AppUtils\";import{Table as TableComp,Rate}from\"antd\";import{Link}from\"react-router-dom\";import{useState}from\"react\";var Table=function Table(_ref){var branches=_ref.branches;var _useState=useState(localStorage.getItem(\"favList\")?JSON.parse(localStorage.getItem(\"favList\")):[]),_useState2=_slicedToArray(_useState,2),favourites=_useState2[0],setFavourites=_useState2[1];localStorage.setItem(\"favList\",JSON.stringify(favourites));function getColumns(){var columns=[];if(branches.length){Object.keys(branches[0]).forEach(function(key){if(key===\"favourite\"){columns.push({title:parseLabel(key),dataIndex:key,key:key,filters:[{text:\"Favourite Only\",value:\"Favourite\"},{text:\"All\",value:\"All\"}],onFilter:function onFilter(selected,record){if(selected===\"Favourite\"){return favourites.indexOf(record.ifsc)!==-1;}else{return true;}}});}else{columns.push({title:parseLabel(key),dataIndex:key,key:key});}});}return columns;}function handleFavourite(selected,ifscCode){if(selected){setFavourites([].concat(_toConsumableArray(favourites),[ifscCode]));}else{setFavourites(favourites.filter(function(ifsc){return ifsc!==ifscCode;}));}}function formatData(){return branches.map(function(branch,ind){if(ind>50)return branch;branch[\"bank_id\"]=/*#__PURE__*/_jsx(Link,{to:\"/bank/\"+branch[\"bank_id\"],children:branch[\"bank_id\"]});branch[\"favourite\"]=/*#__PURE__*/_jsx(Rate,{value:favourites.indexOf(branch[\"ifsc\"])!==-1?1:0,count:1,onChange:function onChange(selected){return handleFavourite(selected,branch[\"ifsc\"]);}});return branch;});}return/*#__PURE__*/_jsx(TableComp,{columns:getColumns(),dataSource:formatData(),rowKey:\"ifsc\",className:\"table\"});};export default Table;","map":{"version":3,"sources":["/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/components/Table/Table.jsx"],"names":["parseLabel","Table","TableComp","Rate","Link","useState","branches","localStorage","getItem","JSON","parse","favourites","setFavourites","setItem","stringify","getColumns","columns","length","Object","keys","forEach","key","push","title","dataIndex","filters","text","value","onFilter","selected","record","indexOf","ifsc","handleFavourite","ifscCode","filter","formatData","map","branch","ind"],"mappings":"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","sourcesContent":["import \"./Table.css\";\nimport { parseLabel } from \"./../../utils/AppUtils\";\nimport { Table as TableComp, Rate } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Table = ({ branches }) => {\n  const [favourites, setFavourites] = useState(\n    localStorage.getItem(\"favList\")\n      ? JSON.parse(localStorage.getItem(\"favList\"))\n      : []\n  );\n\n  localStorage.setItem(\"favList\", JSON.stringify(favourites));\n\n  function getColumns() {\n    let columns = [];\n    if (branches.length) {\n      Object.keys(branches[0]).forEach((key) => {\n        if (key === \"favourite\") {\n          columns.push({\n            title: parseLabel(key),\n            dataIndex: key,\n            key: key,\n            filters: [\n              { text: \"Favourite Only\", value: \"Favourite\" },\n              { text: \"All\", value: \"All\" },\n            ],\n            onFilter: (selected, record) => {\n              if (selected === \"Favourite\") {\n                return favourites.indexOf(record.ifsc) !== -1;\n              } else {\n                return true;\n              }\n            },\n          });\n        } else {\n          columns.push({\n            title: parseLabel(key),\n            dataIndex: key,\n            key: key,\n          });\n        }\n      });\n    }\n    return columns;\n  }\n\n  function handleFavourite(selected, ifscCode) {\n    if (selected) {\n      setFavourites([...favourites, ifscCode]);\n    } else {\n      setFavourites(favourites.filter((ifsc) => ifsc !== ifscCode));\n    }\n  }\n\n  function formatData() {\n    return branches.map((branch, ind) => {\n      if (ind > 50) return branch;\n      branch[\"bank_id\"] = (\n        <Link to={\"/bank/\" + branch[\"bank_id\"]}>{branch[\"bank_id\"]}</Link>\n      );\n      branch[\"favourite\"] = (\n        <Rate\n          value={favourites.indexOf(branch[\"ifsc\"]) !== -1 ? 1 : 0}\n          count={1}\n          onChange={(selected) => handleFavourite(selected, branch[\"ifsc\"])}\n        />\n      );\n      return branch;\n    });\n  }\n\n  return (\n    <TableComp\n      columns={getColumns()}\n      dataSource={formatData()}\n      rowKey=\"ifsc\"\n      className=\"table\"\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}