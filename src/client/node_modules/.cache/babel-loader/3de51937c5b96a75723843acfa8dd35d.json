{"ast":null,"code":"export function parseLabel(label) {\n  let parsedLabel = \"\";\n\n  for (let i = 0; i < label.length; i++) {\n    if (i === 0) {\n      parsedLabel += label.charAt(i).toUpperCase();\n    } else if (label.charAt(i) === \"_\" && i < label.length - 1) {\n      parsedLabel += \" \" + label.charAt(i + 1).toUpperCase();\n      i++;\n    } else {\n      parsedLabel += label.charAt(i);\n    }\n  }\n\n  return parsedLabel;\n}\nexport function debounce(func) {\n  let timer;\n  return function () {\n    let context = this,\n        args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(context, args);\n    }, 300);\n  };\n}","map":{"version":3,"sources":["/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/utils/AppUtils.js"],"names":["parseLabel","label","parsedLabel","i","length","charAt","toUpperCase","debounce","func","timer","context","args","arguments","clearTimeout","setTimeout","apply"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAChC,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIA,CAAC,KAAK,CAAV,EAAa;AACXD,MAAAA,WAAW,IAAID,KAAK,CAACI,MAAN,CAAaF,CAAb,EAAgBG,WAAhB,EAAf;AACD,KAFD,MAEO,IAAIL,KAAK,CAACI,MAAN,CAAaF,CAAb,MAAoB,GAApB,IAA2BA,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAlD,EAAqD;AAC1DF,MAAAA,WAAW,IAAI,MAAMD,KAAK,CAACI,MAAN,CAAaF,CAAC,GAAG,CAAjB,EAAoBG,WAApB,EAArB;AACAH,MAAAA,CAAC;AACF,KAHM,MAGA;AACLD,MAAAA,WAAW,IAAID,KAAK,CAACI,MAAN,CAAaF,CAAb,CAAf;AACD;AACF;;AACD,SAAOD,WAAP;AACD;AAED,OAAO,SAASK,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,MAAIC,KAAJ;AACA,SAAO,YAAY;AACjB,QAAIC,OAAO,GAAG,IAAd;AAAA,QACEC,IAAI,GAAGC,SADT;AAEAC,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGK,UAAU,CAAC,MAAM;AACvBN,MAAAA,IAAI,CAACO,KAAL,CAAWL,OAAX,EAAoBC,IAApB;AACD,KAFiB,EAEf,GAFe,CAAlB;AAGD,GAPD;AAQD","sourcesContent":["export function parseLabel(label) {\n  let parsedLabel = \"\";\n  for (let i = 0; i < label.length; i++) {\n    if (i === 0) {\n      parsedLabel += label.charAt(i).toUpperCase();\n    } else if (label.charAt(i) === \"_\" && i < label.length - 1) {\n      parsedLabel += \" \" + label.charAt(i + 1).toUpperCase();\n      i++;\n    } else {\n      parsedLabel += label.charAt(i);\n    }\n  }\n  return parsedLabel;\n}\n\nexport function debounce(func) {\n  let timer;\n  return function () {\n    let context = this,\n      args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(context, args);\n    }, 300);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}