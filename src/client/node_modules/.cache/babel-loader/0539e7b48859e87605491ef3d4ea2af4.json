{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport { Input, Select } from \"antd\";\nimport { SearchOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst {\n  Option\n} = Select;\n\nfunction App() {\n  _s();\n\n  const [branches, setBranches] = useState([]);\n  const [state, setState] = useState(\"Any\");\n  const [city, setCity] = useState(\"Any\");\n  const [loading, setLoading] = useState(true);\n  let filteredData = [];\n  useEffect(() => {\n    axios.get(\"/api/branches\").then(({\n      data\n    }) => {\n      setBranches(data);\n      setLoading(false);\n    });\n  }, []); //filter data IIFE\n\n  (function filter() {\n    window.alert(\"ff\");\n    let filteredData = []; //filter as per state\n\n    if (state !== \"Any\") {\n      if (city !== \"Any\") {\n        filteredData = branches.filter(branch => branch.state === state && branch.city === city);\n      } else {}\n    }\n  })(); //fetch cities as per state selected\n\n\n  function getCities() {\n    if (state !== \"Any\") {\n      let cities = new Set();\n      branches.forEach(branch => {\n        if (branch.state === state) cities.add(branch.city);\n      });\n      return [...cities].sort().map(city => /*#__PURE__*/_jsxDEV(Option, {\n        value: city,\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, this));\n    } else return [];\n  } //get states from data\n\n\n  function getStates() {\n    let states = new Set();\n    branches.forEach(branch => states.add(branch.state));\n    return [...states].sort().map(state => /*#__PURE__*/_jsxDEV(Option, {\n      value: state,\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n      className: \"loadingIcon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Branches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"citySearch\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"State: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: state,\n            className: \"stateSearchBar\",\n            onChange: setState,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Any\",\n              children: \"Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), getStates()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: city,\n            className: \"citySearchBar\",\n            onChange: setCity,\n            disabled: state === \"Any\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"any\",\n              children: \"Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), getCities()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          placeholder: \"Search\",\n          className: \"searchBar\",\n          prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        branches: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TwqQ/lfbwgV5enMKsQ3W4P0GOeY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/App.jsx"],"names":["Table","Input","Select","SearchOutlined","LoadingOutlined","useState","useEffect","axios","Option","App","branches","setBranches","state","setState","city","setCity","loading","setLoading","filteredData","get","then","data","filter","window","alert","branch","getCities","cities","Set","forEach","add","sort","map","getStates","states"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Table from \"./components/Table\";\nimport { Input, Select } from \"antd\";\nimport { SearchOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst { Option } = Select;\n\nfunction App() {\n  const [branches, setBranches] = useState([]);\n  const [state, setState] = useState(\"Any\");\n  const [city, setCity] = useState(\"Any\");\n  const [loading, setLoading] = useState(true);\n  let filteredData = [];\n\n  useEffect(() => {\n    axios.get(\"/api/branches\").then(({ data }) => {\n      setBranches(data);\n      setLoading(false);\n    });\n  }, []);\n\n  //filter data IIFE\n  (function filter() {\n    window.alert(\"ff\");\n    let filteredData = [];\n    //filter as per state\n    if (state !== \"Any\") {\n      if (city !== \"Any\") {\n        filteredData = branches.filter(\n          (branch) => branch.state === state && branch.city === city\n        );\n      } else {\n      }\n    }\n  })();\n\n  //fetch cities as per state selected\n  function getCities() {\n    if (state !== \"Any\") {\n      let cities = new Set();\n      branches.forEach((branch) => {\n        if (branch.state === state) cities.add(branch.city);\n      });\n      return [...cities]\n        .sort()\n        .map((city) => <Option value={city}>{city}</Option>);\n    } else return [];\n  }\n\n  //get states from data\n  function getStates() {\n    let states = new Set();\n    branches.forEach((branch) => states.add(branch.state));\n    return [...states]\n      .sort()\n      .map((state) => <Option value={state}>{state}</Option>);\n  }\n\n  return (\n    <div className=\"app\">\n      {loading ? (\n        <LoadingOutlined className=\"loadingIcon\" />\n      ) : (\n        <>\n          <h1>Branches</h1>\n          <div className=\"searchContainer\">\n            <div className=\"citySearch\">\n              <label htmlFor=\"state\">State: </label>\n              <Select\n                value={state}\n                className=\"stateSearchBar\"\n                onChange={setState}\n              >\n                <Option value=\"Any\">Any</Option>\n                {getStates()}\n              </Select>\n\n              <label htmlFor=\"city\">City: </label>\n              <Select\n                value={city}\n                className=\"citySearchBar\"\n                onChange={setCity}\n                disabled={state === \"Any\"}\n              >\n                <Option value=\"any\">Any</Option>\n                {getCities()}\n              </Select>\n            </div>\n            <Input\n              size=\"large\"\n              placeholder=\"Search\"\n              className=\"searchBar\"\n              prefix={<SearchOutlined />}\n            />\n          </div>\n          <Table branches={filteredData} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}