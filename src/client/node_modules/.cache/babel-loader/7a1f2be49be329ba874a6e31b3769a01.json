{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Table.css\";\nimport { parseLabel } from \"./../../utils/AppUtils\";\nimport { Table as TableComp, Rate } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Table = ({\n  branches\n}) => {\n  _s();\n\n  const [favourites, setFavourites] = useState(localStorage.getItem(\"favList\") ? JSON.parse(localStorage.getItem(\"favList\")) : []);\n  localStorage.setItem(\"favList\", JSON.stringify(favourites));\n\n  function getColumns() {\n    let columns = [];\n\n    if (branches.length) {\n      Object.keys(branches[0]).forEach(key => {\n        columns.push({\n          title: parseLabel(key),\n          dataIndex: key,\n          key: key\n        });\n      });\n    }\n\n    return columns;\n  }\n\n  function handleFavourite(selected, ifscCode) {\n    if (selected) {\n      setFavourites([...favourites, ifscCode]);\n    } else {\n      setFavourites(favourites.filter(ifsc => ifsc !== ifscCode));\n    }\n  }\n\n  function formatData() {\n    return branches.map((branch, ind) => {\n      if (ind > 50) return branch;\n      branch[\"bank_id\"] = /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/bank/\" + branch[\"bank_id\"],\n        children: branch[\"bank_id\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n      branch[\"favourite\"] = /*#__PURE__*/_jsxDEV(Rate, {\n        value: favourites.indexOf(branch[\"ifsc\"]) !== -1 ? 1 : 0,\n        count: 1,\n        onChange: selected => handleFavourite(selected, branch[\"ifsc\"])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n      return branch;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableComp, {\n    columns: getColumns(),\n    dataSource: formatData(),\n    rowKey: \"ifsc\",\n    className: \"table\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"E/suIKbWhJAP5Mb9h/itMDotXMQ=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/jaideeppannu/Desktop/learning/fyle/src/client/src/components/Table/Table.jsx"],"names":["parseLabel","Table","TableComp","Rate","Link","useState","branches","favourites","setFavourites","localStorage","getItem","JSON","parse","setItem","stringify","getColumns","columns","length","Object","keys","forEach","key","push","title","dataIndex","handleFavourite","selected","ifscCode","filter","ifsc","formatData","map","branch","ind","indexOf"],"mappings":";;;;;AAAA,OAAO,aAAP;AACA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMJ,KAAK,GAAG,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAC1CI,YAAY,CAACC,OAAb,CAAqB,SAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADJ,GAEI,EAHsC,CAA5C;AAMAD,EAAAA,YAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCF,IAAI,CAACG,SAAL,CAAeP,UAAf,CAAhC;;AAEA,WAASQ,UAAT,GAAsB;AACpB,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAIV,QAAQ,CAACW,MAAb,EAAqB;AACnBC,MAAAA,MAAM,CAACC,IAAP,CAAYb,QAAQ,CAAC,CAAD,CAApB,EAAyBc,OAAzB,CAAkCC,GAAD,IAAS;AACxCL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXC,UAAAA,KAAK,EAAEvB,UAAU,CAACqB,GAAD,CADN;AAEXG,UAAAA,SAAS,EAAEH,GAFA;AAGXA,UAAAA,GAAG,EAAEA;AAHM,SAAb;AAKD,OAND;AAOD;;AACD,WAAOL,OAAP;AACD;;AAED,WAASS,eAAT,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C,QAAID,QAAJ,EAAc;AACZlB,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBoB,QAAhB,CAAD,CAAb;AACD,KAFD,MAEO;AACLnB,MAAAA,aAAa,CAACD,UAAU,CAACqB,MAAX,CAAmBC,IAAD,IAAUA,IAAI,KAAKF,QAArC,CAAD,CAAb;AACD;AACF;;AAED,WAASG,UAAT,GAAsB;AACpB,WAAOxB,QAAQ,CAACyB,GAAT,CAAa,CAACC,MAAD,EAASC,GAAT,KAAiB;AACnC,UAAIA,GAAG,GAAG,EAAV,EAAc,OAAOD,MAAP;AACdA,MAAAA,MAAM,CAAC,SAAD,CAAN,gBACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,WAAWA,MAAM,CAAC,SAAD,CAA3B;AAAA,kBAAyCA,MAAM,CAAC,SAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF;AAGAA,MAAAA,MAAM,CAAC,WAAD,CAAN,gBACE,QAAC,IAAD;AACE,QAAA,KAAK,EAAEzB,UAAU,CAAC2B,OAAX,CAAmBF,MAAM,CAAC,MAAD,CAAzB,MAAuC,CAAC,CAAxC,GAA4C,CAA5C,GAAgD,CADzD;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,QAAQ,EAAGN,QAAD,IAAcD,eAAe,CAACC,QAAD,EAAWM,MAAM,CAAC,MAAD,CAAjB;AAHzC;AAAA;AAAA;AAAA;AAAA,cADF;AAOA,aAAOA,MAAP;AACD,KAbM,CAAP;AAcD;;AAED,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAEjB,UAAU,EADrB;AAEE,IAAA,UAAU,EAAEe,UAAU,EAFxB;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxDD;;GAAM7B,K;;KAAAA,K;AA0DN,eAAeA,KAAf","sourcesContent":["import \"./Table.css\";\nimport { parseLabel } from \"./../../utils/AppUtils\";\nimport { Table as TableComp, Rate } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Table = ({ branches }) => {\n  const [favourites, setFavourites] = useState(\n    localStorage.getItem(\"favList\")\n      ? JSON.parse(localStorage.getItem(\"favList\"))\n      : []\n  );\n\n  localStorage.setItem(\"favList\", JSON.stringify(favourites));\n\n  function getColumns() {\n    let columns = [];\n    if (branches.length) {\n      Object.keys(branches[0]).forEach((key) => {\n        columns.push({\n          title: parseLabel(key),\n          dataIndex: key,\n          key: key,\n        });\n      });\n    }\n    return columns;\n  }\n\n  function handleFavourite(selected, ifscCode) {\n    if (selected) {\n      setFavourites([...favourites, ifscCode]);\n    } else {\n      setFavourites(favourites.filter((ifsc) => ifsc !== ifscCode));\n    }\n  }\n\n  function formatData() {\n    return branches.map((branch, ind) => {\n      if (ind > 50) return branch;\n      branch[\"bank_id\"] = (\n        <Link to={\"/bank/\" + branch[\"bank_id\"]}>{branch[\"bank_id\"]}</Link>\n      );\n      branch[\"favourite\"] = (\n        <Rate\n          value={favourites.indexOf(branch[\"ifsc\"]) !== -1 ? 1 : 0}\n          count={1}\n          onChange={(selected) => handleFavourite(selected, branch[\"ifsc\"])}\n        />\n      );\n      return branch;\n    });\n  }\n\n  return (\n    <TableComp\n      columns={getColumns()}\n      dataSource={formatData()}\n      rowKey=\"ifsc\"\n      className=\"table\"\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}